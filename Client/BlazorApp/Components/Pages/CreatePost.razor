@page "/CreatePost"
@using ApiContracts
@using BlazorApp.Services
@using BlazorApp.Components.Blocks
@inject IPostService PostService

<h3>Create post</h3>

<EditForm Model="@postRequest" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator/>
    <ValidationSummary/>
    
    <LabelAndInputField T="string" Label="Title" Id="title" @bind-Value="postRequest.Title"/>
    <LabelAndInputField T="string" Label="Body" Id="body" @bind-Value="postRequest.Body"/>
    
    <button type="submit" class="btn btn-primary mt-4 mb-4">Create post</button>
</EditForm>

@if (errorMessage != null)
{
    <div class="alert alert-danger">@errorMessage</div>
}
@if (successMessage != null)
{
    <div class="alert alert-success">@successMessage</div>
}

@code{
    [Parameter] public int userId { get; set; }
    private CreatePostRequestDto postRequest = new();
    private string? errorMessage, successMessage;
    
    [Parameter] public EventCallback OnPostCreated { get; set; }

    private async Task HandleValidSubmit()
    {
        try
        {
            postRequest.UserId = userId;
            
            var response = await PostService.CreatePostAsync(postRequest);
            successMessage = $"Post created successfully! Post id: {response.PostId}";
            errorMessage = null;
            postRequest.Title = "";
            postRequest.Body = "";
            await OnPostCreated.InvokeAsync(null);
        }
        catch (Exception e)
        {
            Console.WriteLine(e.StackTrace);
            errorMessage = $"Error creating post: {e.Message}";
            successMessage = null;
        }
    }

}